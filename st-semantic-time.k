require "st-syntax.k"

module ST-SEMANTIC-TIME 

    imports ST-SYNTAX

    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms + T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => T# (I11 +Int I21) d (I12 +Int I22) h (I13 +Int I23) m (I14 +Int I24) s (I15 +Int I25) ms
    rule TOD# I1:Int : I2:Int : I3:Int . I4:Int + T# _:Int d I5:Int h I6:Int m I7:Int s I8:Int ms => TOD# (I1 +Int I5) : (I2 +Int I6) : (I3 +Int I7) . (I4 +Int I8)
    rule DT# I0:Int - I9:Int - I1:Int - I2:Int : I3:Int : I4:Int + T# I5:Int d I6:Int h I7:Int m I8:Int s _:Int ms => DT# I0 - I9 - (I1 +Int I5) - (I2 +Int I6) : (I3 +Int I7) : (I4 +Int I8)
 
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms * T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) *Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms * I2:Int => T# (I11 *Int I2) d (I12 *Int I2) h (I13 *Int I2) m (I14 *Int I2) s (I15 *Int I2) ms requires I2 >=Int 0
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms * I2:Float => T# (((((((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) /Int 60)) /Int 60)) /Int 24)) d ((((((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) /Int 60)) /Int 60)) modInt 24) h ((((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) /Int 60)) modInt 60) m ((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) modInt 60) s (Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) modInt 1000) ms requires I2 >=Float 0.0

    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms - T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => T# ((I11 -Int Bool2Int((I12 -Int Bool2Int(I13 -Int Bool2Int((I14 -Int Bool2Int(I15 <Int I25) *Int 1) <Int I25) <Int I23)) <Int I22)) -Int I21) d ((I12 -Int Bool2Int(I13 -Int Bool2Int((I14 -Int Bool2Int(I15 <Int I25) *Int 1) <Int I25) <Int I23) +Int Bool2Int((I12 -Int Bool2Int(I13 -Int Bool2Int((I14 -Int Bool2Int(I15 <Int I25) *Int 1) <Int I25) <Int I23)) <Int I22) *Int 24) -Int I22) h ((I13 -Int Bool2Int((I14 -Int Bool2Int(I15 <Int I25) *Int 1) <Int I25) +Int Bool2Int((I13 -Int Bool2Int((I14 -Int Bool2Int(I15 <Int I25) *Int 1) <Int I25)) <Int I23) *Int 60) -Int I23) m ((I14 -Int Bool2Int(I15 <Int I25) +Int Bool2Int((I14 -Int Bool2Int(I15 <Int I25) *Int 1) <Int I25) *Int 60) -Int I24) s ((I15 +Int Bool2Int(I15 <Int I25) *Int 1000 ) -Int I25) ms requires ((I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 >=Int I25))
    rule D# I11:Int - I12:Int - I13:Int - D# I21:Int - I22:Int - I23:Int => T# (I13 -Int I23) d 0 h 0 m 0 s 0 ms requires (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >=Int I23)
    rule D# I11:Int - I12:Int - I13:Int - D# I21:Int - I22:Int - I23:Int => D# I11 - (I12 -Int 1) - I13 - D# I21 - I22 - (I23 -Int 31) requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 0 orBool (I12 -Int 1) ==Int 1 orBool (I12 -Int 1) ==Int 3 orBool (I12 -Int 1) ==Int 5 orBool (I12 -Int 1) ==Int 7 orBool (I12 -Int 1) ==Int 8 orBool (I12 -Int 1) ==Int 10)
    rule D# I11:Int - I12:Int - I13:Int - D# I21:Int - I22:Int - I23:Int => D# I11 - (I12 -Int 1) - I13 - D# I21 - I22 - (I23 -Int 30) requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 4 orBool (I12 -Int 1) ==Int 6 orBool (I12 -Int 1) ==Int 9 orBool (I12 -Int 1) ==Int 11)
    rule D# I11:Int - I12:Int - I13:Int - D# I21:Int - I22:Int - I23:Int => D# I11 - (I12 -Int 1) - I13 - D# I21 - I22 - (I23 -Int 29) requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 2 andBool (I11 modInt 400 ==Int 0 orBool (I11 modInt 100 =/=Int 0 andBool I11 modInt 4 ==Int 0)))
    rule D# I11:Int - I12:Int - I13:Int - D# I21:Int - I22:Int - I23:Int => D# I11 - (I12 -Int 1) - I13 - D# I21 - I22 - (I23 -Int 28) requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 2 andBool notBool (I11 modInt 400 ==Int 0 orBool (I11 modInt 100 =/=Int 0 andBool I11 modInt 4 ==Int 0)))
    rule D# I11:Int - I12:Int - I13:Int - D# I21:Int - I22:Int - I23:Int => (D# I11 - I12 - I13 - D# I11 - 1 - 1) + (D# (I11 -Int 1) - 12 - 31 - D# I21 - I22 - (I23 -Int 1)) requires (I11 >Int I21)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int - T# I2:Int d I21:Int h I22:Int m I23:Int s I24:Int ms => TOD# ((I11 -Int Bool2Int(I12 -Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) <Int I22)) -Int I21) : ((I12 -Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) +Int Bool2Int(I12 -Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) <Int I22) *Int 60) -Int I22) : ((I13 -Int Bool2Int(I14 <Int I24) +Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) *Int 60) -Int I23) . ((I14 +Int Bool2Int(I14 <Int I24) *Int 1000) -Int I24) requires (I2 ==Int 0 andBool ((I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >=Int I24)))
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int - TOD# I21:Int : I22 :Int : I23:Int . I24:Int => T# 0 d ((I11 -Int Bool2Int(I12 -Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) <Int I22)) -Int I21) h ((I12 -Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) +Int Bool2Int(I12 -Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) <Int I22) *Int 60) -Int I22) m ((I13 -Int Bool2Int(I14 <Int I24) +Int Bool2Int(I13 -Int Bool2Int(I14 <Int I24) <Int I23) *Int 60) -Int I23) s ((I14 +Int Bool2Int(I14 <Int I24) *Int 1000) -Int I24) ms requires (((I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >=Int I24)))
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - T# (I21 -Int 31) d I22 h I23 m I24 s I25 ms requires (I21 >Int 0) andBool ((I12 -Int 1) ==Int 1 orBool (I12 -Int 1) ==Int 3 orBool (I12 -Int 1) ==Int 5 orBool (I12 -Int 1) ==Int 7 orBool (I12 -Int 1) ==Int 8 orBool (I12 -Int 1) ==Int 10 orBool (I12 -Int 1) ==Int 0)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - T# (I21 -Int 30) d I22 h I23 m I24 s I25 ms requires (I21 >Int 0) andBool ((I12 -Int 1) ==Int 4 orBool (I12 -Int 1) ==Int 6 orBool (I12 -Int 1) ==Int 9 orBool (I12 -Int 1) ==Int 11)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - T# (I21 -Int 29) d I22 h I23 m I24 s I25 ms requires (I21 >Int 0) andBool ((I12 -Int 1) ==Int 2 andBool (I11 modInt 400 ==Int 0 orBool (I11 modInt 100 =/=Int 0 andBool I11 modInt 4 ==Int 0)))
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - T# (I21 -Int 28) d I22 h I23 m I24 s I25 ms requires (I21 >Int 0) andBool ((I12 -Int 1) ==Int 2 andBool notBool (I11 modInt 400 ==Int 0 orBool (I11 modInt 100 =/=Int 0 andBool I11 modInt 4 ==Int 0)))
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - T# I21:Int d I22:Int h I23:Int m I24:Int s _:Int ms => DT# I11 - I12 - ((I13 -Int Bool2Int(I14 -Int Bool2Int(I15 -Int Bool2Int(I16 <Int I24) <Int I23) <Int I22)) -Int I21) - ((I14 -Int Bool2Int(I15 -Int Bool2Int(I16 <Int I24) <Int I23) +Int Bool2Int(I14 -Int Bool2Int(I15 -Int Bool2Int(I16 <Int I24) <Int I23) <Int I22) *Int 24) -Int I22) : ((I15 -Int Bool2Int(I16 <Int I24) +Int Bool2Int(I15 -Int Bool2Int(I16 <Int I24) <Int I23) *Int 60) -Int I23) : (I16 +Int Bool2Int(I16 <Int I24) *Int 60 -Int I24)  requires (I21 <=Int 0)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - DT# I21:Int - I22:Int - I23:Int -I24:Int : I25:Int : I26:Int => T# (I13 -Int Bool2Int(I14 -Int Bool2Int(I15 -Int Bool2Int(I16 <Int I26) <Int I25) <Int I24) -Int I23) d ((I14 -Int Bool2Int(I15 -Int Bool2Int(I16 <Int I26) <Int I25) +Int Bool2Int(I14 -Int Bool2Int(I15 -Int Bool2Int(I16 <Int I26) <Int I25) <Int I24) *Int 24) -Int I24) h ((I15 -Int Bool2Int(I16 <Int I26) +Int Bool2Int(I15 -Int Bool2Int(I16 <Int I26) <Int I25) *Int 60) -Int I25) m ((I16 +Int Bool2Int(I16 <Int I26) *Int 60) -Int I26) s 0 ms requires (I13 -Int Bool2Int(I14 -Int Bool2Int(I15 -Int Bool2Int(I16 <Int I26) <Int I25) <Int I24) >=Int I23) andBool I11 ==Int I21 andBool I12 ==Int I22
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - DT# I21:Int - I22:Int - I23:Int -I24:Int : I25:Int : I26:Int => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - DT# I21 - I22 - (I23 -Int 31) - I24 : I25 : I26 requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 0 orBool (I12 -Int 1) ==Int 1 orBool (I12 -Int 1) ==Int 3 orBool (I12 -Int 1) ==Int 5 orBool (I12 -Int 1) ==Int 7 orBool (I12 -Int 1) ==Int 8 orBool (I12 -Int 1) ==Int 10)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - DT# I21:Int - I22:Int - I23:Int -I24:Int : I25:Int : I26:Int => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - DT# I21 - I22 - (I23 -Int 30) - I24 : I25 : I26 requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 4 orBool (I12 -Int 1) ==Int 6 orBool (I12 -Int 1) ==Int 9 orBool (I12 -Int 1) ==Int 11)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - DT# I21:Int - I22:Int - I23:Int -I24:Int : I25:Int : I26:Int => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - DT# I21 - I22 - (I23 -Int 29) - I24 : I25 : I26 requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 2 andBool (I11 modInt 400 ==Int 0 orBool (I11 modInt 100 =/=Int 0 andBool I11 modInt 4 ==Int 0)))
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - DT# I21:Int - I22:Int - I23:Int -I24:Int : I25:Int : I26:Int => DT# I11 - (I12 -Int 1) - I13 - I14 : I15 : I16 - DT# I21 - I22 - (I23 -Int 28) - I24 : I25 : I26 requires (I11 ==Int I21 andBool I12 >Int I22) andBool ((I12 -Int 1) ==Int 2 andBool notBool (I11 modInt 400 ==Int 0 orBool (I11 modInt 100 =/=Int 0 andBool I11 modInt 4 ==Int 0)))
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int - DT# I21:Int - I22:Int - I23:Int -I24:Int : I25:Int : I26:Int => (DT# I11 - I12 - I13 - I14 : I15 : I16 - DT# I11 - 1 - 1 - 0 : 0 : 0) + (DT# (I11 -Int 1) - 12 - 31 - 23 : 59 : 59 - DT# I21 - I22 - I23 - I24 : I25 : (I26 -Int 1)) requires (I11 >Int I21)

    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms / T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) /Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)   requires (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000) =/=Int 0
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms / I2:Int => T# (((((((((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) /Int I2) /Int 1000)) /Int 60)) /Int 60)) /Int 24) d (((((((((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) /Int I2) /Int 1000)) /Int 60)) /Int 60)) modInt 24) h (((((((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) /Int I2) /Int 1000)) /Int 60)) modInt 60) m (((((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) /Int I2) /Int 1000)) modInt 60) s (((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) /Int I2) modInt 1000) ms   requires I2 >Int 0
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms / I2:Float => T# (((((((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) /Int 60)) /Int 60)) /Int 24)) d ((((((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) /Int 60)) /Int 60)) modInt 24) h ((((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) /Int 60)) modInt 60) m ((Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) /Int 1000) modInt 60) s (Float2Int(floorFloat(Int2Float((I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000),100,0) *Float I2)) modInt 1000) ms  requires I2 >Float 0.0

    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int > TOD# I21:Int : I22 :Int : I23:Int . I24:Int => true requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int > TOD# I21:Int : I22 :Int : I23:Int . I24:Int => false requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <=Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int < TOD# I21:Int : I22 :Int : I23:Int . I24:Int => true requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int < TOD# I21:Int : I22 :Int : I23:Int . I24:Int => false requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >=Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int >= TOD# I21:Int : I22 :Int : I23:Int . I24:Int => true requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >=Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int >= TOD# I21:Int : I22 :Int : I23:Int . I24:Int => false requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int <= TOD# I21:Int : I22 :Int : I23:Int . I24:Int => true requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <=Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int <= TOD# I21:Int : I22 :Int : I23:Int . I24:Int => false requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int = TOD# I21:Int : I22 :Int : I23:Int . I24:Int => true requires (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int = TOD# I21:Int : I22 :Int : I23:Int . I24:Int => false requires (I11 =/=Int I21 orBool I12 =/=Int I22 orBool I13 =/=Int I23 orBool I14 =/=Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int <> TOD# I21:Int : I22 :Int : I23:Int . I24:Int => true requires (I11 =/=Int I21 orBool I12 =/=Int I22 orBool I13 =/=Int I23 orBool I14 =/=Int I24)
    rule TOD# I11:Int : I12 :Int : I13:Int . I14:Int <> TOD# I21:Int : I22 :Int : I23:Int . I24:Int => false requires (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24)

    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms > T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) >Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms < T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) <Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms >= T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) >=Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms <= T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) <=Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms = T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) ==Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms <> T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms => (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) =/=Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)

    rule D# I11:Int - I12:Int - I13:Int > D# I21:Int - I22:Int - I23:Int => true requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23)
    rule D# I11:Int - I12:Int - I13:Int > D# I21:Int - I22:Int - I23:Int => false requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <=Int I23)
    rule D# I11:Int - I12:Int - I13:Int < D# I21:Int - I22:Int - I23:Int => true requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23)
    rule D# I11:Int - I12:Int - I13:Int < D# I21:Int - I22:Int - I23:Int => false requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >=Int I23)
    rule D# I11:Int - I12:Int - I13:Int >= D# I21:Int - I22:Int - I23:Int => true requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >=Int I23)
    rule D# I11:Int - I12:Int - I13:Int >= D# I21:Int - I22:Int - I23:Int => false requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23)
    rule D# I11:Int - I12:Int - I13:Int <= D# I21:Int - I22:Int - I23:Int => true requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <=Int I23)
    rule D# I11:Int - I12:Int - I13:Int <= D# I21:Int - I22:Int - I23:Int => false requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23)
    rule D# I11:Int - I12:Int - I13:Int = D# I21:Int - I22:Int - I23:Int => true requires (I11 ==Int I21) andBool (I12 ==Int I22) andBool (I13 ==Int I23)
    rule D# I11:Int - I12:Int - I13:Int = D# I21:Int - I22:Int - I23:Int => false requires (I11 =/=Int I21) orBool (I12 =/=Int I22) orBool (I13 =/=Int I23)
    rule D# I11:Int - I12:Int - I13:Int <> D# I21:Int - I22:Int - I23:Int => true requires (I11 =/=Int I21) orBool (I12 =/=Int I22) orBool (I13 =/=Int I23)
    rule D# I11:Int - I12:Int - I13:Int <> D# I21:Int - I22:Int - I23:Int => false requires (I11 ==Int I21) andBool (I12 ==Int I22) andBool (I13 ==Int I23)

    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int > DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => true requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 >Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 >Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int > DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => false requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 <Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 <=Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int < DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => true requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 <Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 <Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int < DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => false requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 >Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 >=Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int >= DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => true requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 >Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 >=Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int >= DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => false requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 <Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 <Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int <= DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => true requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 <Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 <=Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int <= DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => false requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 >Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 >Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int = DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => true requires (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 ==Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int = DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => false requires (I11 =/=Int I21 orBool I12 =/=Int I22 orBool I13 =/=Int I23 orBool I14 =/=Int I24 orBool I15 =/=Int I25 orBool I16 =/=Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int <> DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => true requires (I11 =/=Int I21 orBool I12 =/=Int I22 orBool I13 =/=Int I23 orBool I14 =/=Int I24 orBool I15 =/=Int I25 orBool I16 =/=Int I26)
    rule DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int <> DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int => false requires (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 ==Int I26)

    rule MAX(TOD# I11:Int : I12 :Int : I13:Int . I14:Int , TOD# I21:Int : I22 :Int : I23:Int . I24:Int) => TOD# I11 : I12 : I13 . I14 requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >=Int I24)
    rule MAX(TOD# I11:Int : I12 :Int : I13:Int . I14:Int , TOD# I21:Int : I22 :Int : I23:Int . I24:Int) => TOD# I21 : I22 : I23 . I24 requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24)
    rule MIN(TOD# I11:Int : I12 :Int : I13:Int . I14:Int , TOD# I21:Int : I22 :Int : I23:Int . I24:Int) => TOD# I11 : I12 : I13 . I14 requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <=Int I24)
    rule MIN(TOD# I11:Int : I12 :Int : I13:Int . I14:Int , TOD# I21:Int : I22 :Int : I23:Int . I24:Int) => TOD# I21 : I22 : I23 . I24 requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24)

    rule MAX(T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms , T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms) => T# I11 d I12 h I13 m I14 s I15 ms requires (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) >=Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule MAX(T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms , T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms) => T# I21 d I22 h I23 m I24 s I25 ms requires (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) <Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule MIN(T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms , T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms) => T# I11 d I12 h I13 m I14 s I15 ms requires (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) <=Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)
    rule MIN(T# I11:Int d I12:Int h I13:Int m I14:Int s I15:Int ms , T# I21:Int d I22:Int h I23:Int m I24:Int s I25:Int ms) => T# I21 d I22 h I23 m I24 s I25 ms requires (I15 +Int I14 *Int 1000 +Int I13 *Int 60000 +Int I12 *Int 3600000 +Int I11 *Int 86400000) >Int (I25 +Int I24 *Int 1000 +Int I23 *Int 60000 +Int I22 *Int 3600000 +Int I21 *Int 86400000)

    rule MAX(D# I11:Int - I12:Int - I13:Int , D# I21:Int - I22:Int - I23:Int) => D# I11 - I12 - I13 requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >=Int I23)
    rule MAX(D# I11:Int - I12:Int - I13:Int , D# I21:Int - I22:Int - I23:Int) => D# I21 - I22 - I23 requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <Int I23)
    rule MIN(D# I11:Int - I12:Int - I13:Int , D# I21:Int - I22:Int - I23:Int) => D# I11 - I12 - I13 requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 <=Int I23)
    rule MIN(D# I11:Int - I12:Int - I13:Int , D# I21:Int - I22:Int - I23:Int) => D# I21 - I22 - I23 requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I21 andBool I12 ==Int I22 andBool I13 >Int I23)

    rule MAX(DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int , DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int) => DT# I11 - I12 - I13 - I14 : I15 : I16 requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 >Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 >=Int I26)
    rule MAX(DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int , DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int) => DT# I21 - I22 - I23 - I24 : I25 : I26 requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 <Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 <Int I26)
    rule MIN(DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int , DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int) => DT# I11 - I12 - I13 - I14 : I15 : I16 requires (I11 <Int I21) orBool (I11 ==Int I21 andBool I12 <Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 <Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 <Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 <Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 <=Int I26)
    rule MIN(DT# I11:Int - I12:Int - I13:Int - I14:Int : I15:Int : I16:Int , DT# I21:Int - I22:Int - I23:Int - I24:Int : I25:Int : I26:Int) => DT# I21 - I22 - I23 - I24 : I25 : I26 requires (I11 >Int I21) orBool (I11 ==Int I21 andBool I12 >Int I22) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 >Int I23) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 >Int I24) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 >Int I25) orBool (I11 ==Int I12 andBool I12 ==Int I22 andBool I13 ==Int I23 andBool I14 ==Int I24 andBool I15 ==Int I25 andBool I16 >Int I26)
endmodule